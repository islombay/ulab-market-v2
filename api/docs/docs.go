// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/admin": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Change Admin, available for owners",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "change admin",
                "operationId": "changeAdmin",
                "parameters": [
                    {
                        "description": "Change info",
                        "name": "changeInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.ChangeAdminRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request/ invalid email/ invalid phone_number/ No update provided by user / invalid password",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "User/Role not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create admin.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Create admin",
                "operationId": "createAdmin",
                "parameters": [
                    {
                        "description": "Create admin body",
                        "name": "createAdmin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created",
                        "schema": {
                            "$ref": "#/definitions/models_v1.UUIDResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request/Invalid email/Invalid phone/Invalid password",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden. Current user has no enough permissions to create admin",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "409": {
                        "description": "Already exists",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/admin/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "delete admin",
                "operationId": "deleteAdmin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/auth/change_password": {
            "post": {
                "description": "Change password works only for clients.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "ChangePassword",
                "operationId": "changePassword",
                "deprecated": true,
                "parameters": [
                    {
                        "description": "Change password",
                        "name": "change_password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.ChangePassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully changed password",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request, invalid password",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "406": {
                        "description": "Invalid verification code",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "501": {
                        "description": "Not implemented\"s",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "operationId": "login",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success. Now needs to verify verification code /api/verify_code",
                        "schema": {
                            "$ref": "#/definitions/models_v1.RequestCode"
                        }
                    },
                    "400": {
                        "description": "Bad request / Bad Email / Bad Phone",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "417": {
                        "description": "Invalid type",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "501": {
                        "description": "Not implemented (phone verification)",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/auth/login_admin": {
            "post": {
                "description": "Login for admin. This is need to enter for admin panel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login for admin",
                "operationId": "loginadmin",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "login_admin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.LoginAdminRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success returning token",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Token"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "406": {
                        "description": "User not verified",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "417": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/auth/login_courier": {
            "post": {
                "description": "Login for courier. This is need to enter for courier panel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login for courier",
                "operationId": "LoginCourier",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "login_courier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.LoginAdminRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success returning token",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Token"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "406": {
                        "description": "User not verified",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "417": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "description": "Create Client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Create Client",
                "operationId": "register",
                "deprecated": true,
                "parameters": [
                    {
                        "description": "Register Request",
                        "name": "register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Request that needs verification",
                        "schema": {
                            "$ref": "#/definitions/models_v1.RequestCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request / Invalid email / Invalid phone / Invalid password",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/auth/request_code": {
            "post": {
                "description": "request code is needed when password is forgotten",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Request code",
                "operationId": "requestCode",
                "deprecated": true,
                "parameters": [
                    {
                        "description": "Request code request",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.RequestCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success returning token",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request / Invalid email / Invalid phone",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal / Failed to send code",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "501": {
                        "description": "Not implemented email/phone verification",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/auth/verify_code": {
            "post": {
                "description": "Verify client's email/phone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Verify client's email/phone",
                "operationId": "verifyCode",
                "parameters": [
                    {
                        "description": "Verify code Request",
                        "name": "verifyCode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.VerifyCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Token"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "406": {
                        "description": "Invalid verification code",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "501": {
                        "description": "Not implemented email/phone verification",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/basket": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get all products from basket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "basket"
                ],
                "summary": "get all products from basket",
                "operationId": "GetBasket",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.GetBasket"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "basket"
                ],
                "operationId": "ChangeBasket",
                "parameters": [
                    {
                        "description": "Change basket body",
                        "name": "change_basket",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.ChangeBasket"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request / bad quantity / bad id (product)",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "413": {
                        "description": "Kiritilgan quantity bazadagi bor quantity dan kop",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "add product to basket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "basket"
                ],
                "summary": "add product to basket",
                "operationId": "AddToBasket",
                "parameters": [
                    {
                        "description": "Add product to basket",
                        "name": "add_to_basket",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.AddToBasket"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "bad request / bad uuid",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "409": {
                        "description": "already found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "413": {
                        "description": "Kiritilgan quantity bazadagi bor quantity dan kop",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete from basket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "basket"
                ],
                "summary": "delete from basket",
                "operationId": "DeleteFromBasket",
                "parameters": [
                    {
                        "description": "Remove from basket information",
                        "name": "delete_from_basket",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.RemoveFromBasket"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request / invalid product id",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/branch": {
            "get": {
                "description": "get branch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "branch"
                ],
                "summary": "get branch all",
                "operationId": "GetAllBranches",
                "responses": {
                    "200": {
                        "description": "branch returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.BranchModel"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "change branch name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "branch"
                ],
                "summary": "change branch",
                "operationId": "ChangeBranch",
                "parameters": [
                    {
                        "description": "change branch",
                        "name": "changeBrand",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.ChangeBranch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request / bad uuid / no update provided",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Brand not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create branch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "branch"
                ],
                "summary": "Create branch",
                "operationId": "AddBranch",
                "parameters": [
                    {
                        "description": "Create branch request",
                        "name": "create_brand",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.CreateBranch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/models.BranchModel"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "409": {
                        "description": "Already exists",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/branch/{id}": {
            "get": {
                "description": "get branch by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "branch"
                ],
                "summary": "get branch by id",
                "operationId": "GetBranchByID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "branch id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "branch returned",
                        "schema": {
                            "$ref": "#/definitions/models.BranchModel"
                        }
                    },
                    "400": {
                        "description": "Bad UUID",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Branch not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete branch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "branch"
                ],
                "summary": "delete branch",
                "operationId": "DeleteBranch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "branch id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "bad uuid",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "brand not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/brand": {
            "get": {
                "description": "get brand",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brand"
                ],
                "summary": "get brand all",
                "operationId": "getAllBrand",
                "responses": {
                    "200": {
                        "description": "brand returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Brand"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "change brand name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brand"
                ],
                "summary": "change brand",
                "operationId": "changeBrand",
                "parameters": [
                    {
                        "description": "change brand",
                        "name": "changeBrand",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.ChangeBrand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request / bad uuid / no update provided",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Brand not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create brand",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brand"
                ],
                "summary": "Create brand",
                "operationId": "createBrand",
                "parameters": [
                    {
                        "description": "Create brand request",
                        "name": "create_brand",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.CreateBrand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/models.Brand"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "409": {
                        "description": "Already exists",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/brand/{id}": {
            "get": {
                "description": "get brand by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brand"
                ],
                "summary": "get brand by id",
                "operationId": "getBrandById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "brand id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "brand returned",
                        "schema": {
                            "$ref": "#/definitions/models.Brand"
                        }
                    },
                    "400": {
                        "description": "Bad UUID",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Brand not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete brand",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brand"
                ],
                "summary": "delete brand",
                "operationId": "deleteBrand",
                "parameters": [
                    {
                        "type": "string",
                        "description": "brand id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "bad uuid",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "brand not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/category": {
            "get": {
                "description": "get category, returns translations, and subcategories for all category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "get category all",
                "operationId": "getAllCategory",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Only subcategory",
                        "name": "only_sub",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "category returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CategorySwagger"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "change category name and parent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "change category",
                "operationId": "changeCategory",
                "parameters": [
                    {
                        "description": "change category. all old values must be also given",
                        "name": "changeCategory",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.ChangeCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request / bad uuid",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Category not found/ parent category not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "Create category",
                "operationId": "createCategory",
                "parameters": [
                    {
                        "type": "string",
                        "name": "icon_id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "name_ru",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "name_uz",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "parent_id",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Image file",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.ResponseID"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "409": {
                        "description": "Already exists",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/category/change_image": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "change category image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "change category image",
                "operationId": "ChangeCategoryImage",
                "parameters": [
                    {
                        "type": "string",
                        "name": "category_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "icon_id",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "picture file",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request / bad uuid",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "413": {
                        "description": "Image size is big",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "415": {
                        "description": "Image type is not supported",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/category/{id}": {
            "get": {
                "description": "get category by id, returns translations, and subcategories for specified category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "get category by id",
                "operationId": "getCategoryById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "category returned",
                        "schema": {
                            "$ref": "#/definitions/models.CategorySwagger"
                        }
                    },
                    "400": {
                        "description": "Bad UUID",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete category \u0026 delete category translations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "delete category",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "bad uuid",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "category not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/category/{id}/brand": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "operationId": "GetCategoryBrands",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models.Brand"
                        }
                    },
                    "400": {
                        "description": "Bad id",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/client": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get list of clients ( all information )",
                "tags": [
                    "client"
                ],
                "summary": "Get list of clients ( only staff )",
                "operationId": "GetClientList",
                "responses": {
                    "200": {
                        "description": "List of clients",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ClientSwagger"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/courier": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create courier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courier"
                ],
                "summary": "Create courier",
                "operationId": "createCourier",
                "parameters": [
                    {
                        "description": "Create courier body",
                        "name": "createCourier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created",
                        "schema": {
                            "$ref": "#/definitions/models_v1.UUIDResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request/Invalid email/Invalid phone/Invalid password",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden. Current user has no enough permissions to create courier",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "409": {
                        "description": "Already exists",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/courier/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete courier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courier"
                ],
                "summary": "delete courier",
                "operationId": "DeleteCourier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Courier ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/favourite": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get all from favourite",
                "tags": [
                    "favourite"
                ],
                "summary": "Get all from favourite",
                "operationId": "GetAllFavourite",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.FavouriteModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add product to favourite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favourite"
                ],
                "summary": "Add product to favourite",
                "operationId": "AddToFavourite",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.AddToFavourite"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models.FavouriteModel"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/icon": {
            "get": {
                "description": "get all",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "icon"
                ],
                "summary": "get all",
                "operationId": "GetIconsAll",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.IconModel"
                            }
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "add icon to list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "icon"
                ],
                "summary": "add icon to list",
                "operationId": "AddIconToList",
                "parameters": [
                    {
                        "type": "string",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "icon file",
                        "name": "icon",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models.IconModel"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "409": {
                        "description": "already exists (name)",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "415": {
                        "description": "invalid icon type",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/icon/{id}": {
            "get": {
                "description": "get by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "icon"
                ],
                "summary": "get by id",
                "operationId": "GetIconByID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models.IconModel"
                        }
                    },
                    "400": {
                        "description": "bad id",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete icon",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "icon"
                ],
                "summary": "delete icon",
                "operationId": "DeleteIcon",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "bad id",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/income": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all incomes list",
                "tags": [
                    "income"
                ],
                "summary": "Get all incomes",
                "operationId": "GetIncomeList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit of income output",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search inside the income",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success body",
                        "schema": {
                            "$ref": "#/definitions/models_v1.IncomeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create income. Products must be given inside json body",
                "tags": [
                    "income"
                ],
                "summary": "Create income",
                "operationId": "create income",
                "parameters": [
                    {
                        "description": "Create income body model",
                        "name": "createIncome",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.CreateIncome"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success body",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Income"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/income/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get income",
                "tags": [
                    "income"
                ],
                "summary": "Get income",
                "operationId": "GetIncomeByID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success body",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Income"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/order": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get order all",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "get order all",
                "operationId": "GetOrderAll",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order status (active or archive)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page value. Default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit value. Default 10",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.OrderModel"
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "create order",
                "operationId": "CreateOrder",
                "parameters": [
                    {
                        "description": "Create order body",
                        "name": "create_order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.CreateOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request / payment type invalid",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "411": {
                        "description": "Basket is empty",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/order/cancel/{id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "cancel the order. available only for staff members",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "cancel the order",
                "operationId": "OrderCancel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request / status invalid",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "405": {
                        "description": "Status already set and can not be changed",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "423": {
                        "description": "Order already deleted and can not be changed",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/order/courier": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get list of all new orders (especially for couriers)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get all new orders list for couriers",
                "operationId": "GetAvailableOrdersCourier",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.OrderModel"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/order/finish/{id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "finish the order. available only for staff members",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "finish the order",
                "operationId": "OrderFinish",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request / status invalid",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "405": {
                        "description": "Status already set and can not be changed",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "423": {
                        "description": "Order already deleted and can not be changed",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/order/myorders": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get the list of orders of client (client request)",
                "tags": [
                    "order"
                ],
                "summary": "get the list of orders of client (client request)",
                "operationId": "ClientOrders",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page value. Default 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit value. Default 10",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/order/new": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get list of all new orders (especially for pickers)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get all new orders list",
                "operationId": "GetNewOrdersList",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.OrderModel"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/order/picked/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "mark the order as picked",
                "tags": [
                    "order"
                ],
                "summary": "mark the order as picked (pickers)",
                "operationId": "orderPicked",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad id",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "405": {
                        "description": "Can not change the status",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/order/picked_deliver/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "mark the order as picked for couriers (shu zakazni men olaman degan mano)",
                "tags": [
                    "order"
                ],
                "summary": "mark the order as picked (courier)",
                "operationId": "OrderMarkPickedByCourier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad id",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "405": {
                        "description": "Can not change the status",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/order/product": {
            "get": {
                "description": "get order product all",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "get order product all",
                "operationId": "GetOrderProductAll",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.OrderProductModel"
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/order/product/{id}": {
            "get": {
                "description": "get order product by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "get order product by id",
                "operationId": "GetOrderProduct",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models.OrderProductModel"
                        }
                    },
                    "400": {
                        "description": "bad id",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Order product not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/order/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get order by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "get order by id",
                "operationId": "GetOrderByID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models.OrderModel"
                        }
                    },
                    "400": {
                        "description": "bad id",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/owner": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Change owner, available for super",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "owner"
                ],
                "summary": "change owner",
                "operationId": "changeOwner",
                "parameters": [
                    {
                        "description": "Change info",
                        "name": "changeInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.ChangeAdminRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request/ invalid email/ invalid phone_number/ No update provided by user / invalid password",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "User/Role not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create owner. Will return error \"Already exists\" if the owner is already there.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "owner"
                ],
                "summary": "Create owner",
                "operationId": "createOwner",
                "parameters": [
                    {
                        "description": "Create owner body",
                        "name": "createowner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Token"
                        }
                    },
                    "400": {
                        "description": "Bad request/Invalid email/Invalid phone/Invalid password",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden. If currect user is not super, this endpoint will return forbidden(403)",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "409": {
                        "description": "Already exists",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/owner/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete owner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "owner"
                ],
                "summary": "delete owner",
                "operationId": "deleteOwner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/product": {
            "get": {
                "description": "get all products",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "get all products",
                "operationId": "getAllProducts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID to search in",
                        "name": "cid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query to search product",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Brand ID to search in",
                        "name": "bid",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset value. Default 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit value. Default 10",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Product"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request / bad uuid / status invalid",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Category not found / Brand not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "edit product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "edit product",
                "operationId": "EditProduct",
                "parameters": [
                    {
                        "description": "edit product request",
                        "name": "edit_product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.ChangeProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfull edit",
                        "schema": {
                            "$ref": "#/definitions/models.Product"
                        }
                    },
                    "400": {
                        "description": "Bad request/bad id/ bad price/ bad status",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Product not found/ Category not found/ Brand not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create product",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "create product",
                "operationId": "createProduct",
                "parameters": [
                    {
                        "type": "string",
                        "name": "articul",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "branch_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "brand_id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "description_ru",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "description_uz",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "name": "income_price",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "name_ru",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "name_uz",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "name": "outcome_price",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "quantity",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "status",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "subcategory_id",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Main image",
                        "name": "main_image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "csv",
                        "description": "Image files (multiple)",
                        "name": "image_files",
                        "in": "formData"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "csv",
                        "description": "Video files (multiple)",
                        "name": "video_files",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models.Product"
                        }
                    },
                    "400": {
                        "description": "Bad request / bad uuid / status invalid",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Category not found / Brand not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "409": {
                        "description": "Articul already found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "413": {
                        "description": "Image size is big / Video size is big / Image count too many / Video count too many",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "415": {
                        "description": "Image type is not supported / Video type is not supported",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/product/add_image_files": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "add image files to product",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "add image files to product",
                "operationId": "AddProductImageFiles",
                "parameters": [
                    {
                        "type": "string",
                        "name": "product_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "image files",
                        "name": "media_files",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request / bad uuid",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "413": {
                        "description": "Image size is big / Image count too many",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "415": {
                        "description": "Image type is not supported",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/product/add_video_files": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "add video files to product",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "add video files to product",
                "operationId": "AddProductVideoFiles",
                "parameters": [
                    {
                        "type": "string",
                        "name": "product_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "csv",
                        "description": "video files",
                        "name": "media_files",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request / bad uuid",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "413": {
                        "description": "Video size is big / Video count too many",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "415": {
                        "description": "Video type is not supported",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/product/admin/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get product by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "get product by id",
                "operationId": "GetProductByIDAdmin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Product"
                        }
                    },
                    "400": {
                        "description": "Bad request / bad uuid",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/product/change_image": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "change image of a product",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "change image of a product",
                "operationId": "ChangeProductMainImage",
                "parameters": [
                    {
                        "type": "string",
                        "name": "product_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "image",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request / bad uuid",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "413": {
                        "description": "Main image size exceeds the limit",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/product/change_price": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "change products price",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Change products price (selling price)",
                "operationId": "ChangeProductPrice",
                "parameters": [
                    {
                        "description": "Change product price",
                        "name": "price_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.ChangeProductPrice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad id/ bad price",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/product/{id}": {
            "get": {
                "description": "get product by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "get product by id",
                "operationId": "getProductByID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Product"
                        }
                    },
                    "400": {
                        "description": "Bad request / bad uuid",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete product",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "delete product",
                "operationId": "DeleteProduct",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad ID",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/roles/attach": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "attach permission to role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "attach permission to role",
                "operationId": "AttachPermissionToRole",
                "parameters": [
                    {
                        "description": "attach body",
                        "name": "attach_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.AttachRoleToPermission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attach Permission To Role",
                        "schema": {
                            "$ref": "#/definitions/models.AttachPermission"
                        }
                    },
                    "400": {
                        "description": "Bad request / bad UUID",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Role not found/ Permission not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "409": {
                        "description": "Already exists",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "DisAttach Permission To Role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "DisAttach Permission To Role",
                "operationId": "DisAttachPermissionToRole",
                "parameters": [
                    {
                        "description": "disattach body",
                        "name": "disattach_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.AttachRoleToPermission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Disattach Permission To Role",
                        "schema": {
                            "$ref": "#/definitions/models.AttachPermission"
                        }
                    },
                    "400": {
                        "description": "Bad request / bad UUID",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/roles/permission": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get all permissions in db",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "get all permissions",
                "operationId": "getAllPermissions",
                "responses": {
                    "200": {
                        "description": "Permissions list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PermissionModel"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/roles/role": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get all roles in db",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "get all roles",
                "operationId": "getAllRoles",
                "responses": {
                    "200": {
                        "description": "Roles list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.RoleModel"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create new role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "create new role",
                "operationId": "CreateNewRole",
                "parameters": [
                    {
                        "description": "create new role body",
                        "name": "create_new_role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.CreateNewRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New role body",
                        "schema": {
                            "$ref": "#/definitions/models.RoleModel"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/storage": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get storage list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storage"
                ],
                "summary": "Get storage  list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models_v1.StorageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Page not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Interval server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storage"
                ],
                "summary": "Create a new storage",
                "parameters": [
                    {
                        "description": "storage",
                        "name": "storage",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models_v1.CreateStorage"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Income"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Page not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Interval server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/storage/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get storage  by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storage"
                ],
                "summary": "Get storage  by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "storage_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Income"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Page not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Interval server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storage"
                ],
                "summary": "Update storage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "storage",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "storage",
                        "name": "sale_point",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models_v1.UpdateStorage"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Income"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Page not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Interval server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storage"
                ],
                "summary": "Delete storage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "storage_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Page not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Interval server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/super/migrate-down": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "super"
                ],
                "operationId": "SuperMigrateDown",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AttachPermission": {
            "type": "object",
            "required": [
                "permission_id",
                "role_id"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "permission_id": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.BranchModel": {
            "type": "object",
            "properties": {
                "close_time": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "open_time": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Brand": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Category": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "icon_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name_ru": {
                    "type": "string"
                },
                "name_uz": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "subcategories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Category"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.CategorySwagger": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "icon_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "example": "a2d70daf-b4ac-4198-a6a0-999447483c18"
                },
                "image": {
                    "type": "string",
                    "example": "https://firebasestorage.googleapis.com/v0/b/ulab-market.appspot.com/o/test%2Fcategory%2Fa2d70daf-b4ac-4198-a6a0-999447483c18?alt=media\u0026token=test%2Fcategory%2Fa2d70daf-b4ac-4198-a6a0-999447483c18"
                },
                "name_ru": {
                    "type": "string",
                    "example": "электроника"
                },
                "name_uz": {
                    "type": "string",
                    "example": "electronic"
                },
                "parent_id": {
                    "type": "string",
                    "example": ""
                },
                "subcategories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SubCategorySwagger"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.ClientSwagger": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order_count": {
                    "type": "integer"
                },
                "phone_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.FavouriteModel": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.IconModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.OrderModel": {
            "type": "object",
            "properties": {
                "client_comment": {
                    "type": "string"
                },
                "client_first_name": {
                    "type": "string"
                },
                "client_last_name": {
                    "type": "string"
                },
                "client_phone_number": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "delivered_at": {
                    "type": "string"
                },
                "delivering_user_id": {
                    "type": "string"
                },
                "delivery_addr_lat": {
                    "type": "number"
                },
                "delivery_addr_long": {
                    "type": "number"
                },
                "delivery_addr_name": {
                    "type": "string"
                },
                "delivery_type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "payment_type": {
                    "type": "string"
                },
                "picked_at": {
                    "type": "string"
                },
                "picker_user_id": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.OrderProductModel"
                    }
                },
                "status": {
                    "type": "string"
                },
                "status_id": {
                    "type": "integer"
                },
                "total_price": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.OrderProductModel": {
            "type": "object",
            "properties": {
                "articul": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "main_image": {
                    "type": "string"
                },
                "name_ru": {
                    "type": "string"
                },
                "name_uz": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "product_price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "total_price": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.PermissionModel": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Product": {
            "type": "object",
            "properties": {
                "articul": {
                    "type": "string"
                },
                "brand_id": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description_ru": {
                    "type": "string"
                },
                "description_uz": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductMediaFiles"
                    }
                },
                "main_image": {
                    "type": "string"
                },
                "name_ru": {
                    "type": "string"
                },
                "name_uz": {
                    "type": "string"
                },
                "outcome_price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "rating": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "video_files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductMediaFiles"
                    }
                },
                "view_count": {
                    "type": "integer"
                }
            }
        },
        "models.ProductMediaFiles": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "media_file": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Response": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "data": {},
                "description": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "models.RoleModel": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PermissionModel"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.SubCategorySwagger": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "icon_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name_ru": {
                    "type": "string",
                    "example": "электроника"
                },
                "name_uz": {
                    "type": "string",
                    "example": "electronic"
                },
                "parent_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models_v1.AddToBasket": {
            "type": "object",
            "required": [
                "product_id",
                "quantity"
            ],
            "properties": {
                "product_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "models_v1.AddToFavourite": {
            "type": "object",
            "required": [
                "product_id"
            ],
            "properties": {
                "product_id": {
                    "type": "string"
                }
            }
        },
        "models_v1.AttachRoleToPermission": {
            "type": "object",
            "required": [
                "permission_id",
                "role_id"
            ],
            "properties": {
                "permission_id": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "models_v1.ChangeAdminRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "models_v1.ChangeBasket": {
            "type": "object",
            "required": [
                "product_id",
                "quantity"
            ],
            "properties": {
                "product_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "models_v1.ChangeBranch": {
            "type": "object",
            "required": [
                "close_time",
                "id",
                "name",
                "open_time"
            ],
            "properties": {
                "close_time": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "open_time": {
                    "type": "string"
                }
            }
        },
        "models_v1.ChangeBrand": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models_v1.ChangeCategory": {
            "type": "object",
            "required": [
                "id",
                "name_ru",
                "name_uz"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name_ru": {
                    "type": "string"
                },
                "name_uz": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                }
            }
        },
        "models_v1.ChangePassword": {
            "type": "object",
            "required": [
                "code",
                "password",
                "source",
                "type"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "111111"
                },
                "password": {
                    "type": "string",
                    "example": "password_1"
                },
                "source": {
                    "type": "string",
                    "example": "example@example.com"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "email",
                        "phone_number"
                    ],
                    "example": "email"
                }
            }
        },
        "models_v1.ChangeProductPrice": {
            "type": "object",
            "required": [
                "id",
                "price"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "models_v1.ChangeProductRequest": {
            "type": "object",
            "required": [
                "articul",
                "description_ru",
                "description_uz",
                "id",
                "name_ru",
                "name_uz",
                "outcome_price",
                "status"
            ],
            "properties": {
                "articul": {
                    "type": "string"
                },
                "brand_id": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "description_ru": {
                    "type": "string"
                },
                "description_uz": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name_ru": {
                    "type": "string"
                },
                "name_uz": {
                    "type": "string"
                },
                "outcome_price": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models_v1.CreateBranch": {
            "type": "object",
            "required": [
                "close_time",
                "name",
                "open_time"
            ],
            "properties": {
                "close_time": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "open_time": {
                    "type": "string"
                }
            }
        },
        "models_v1.CreateBrand": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "models_v1.CreateIncome": {
            "type": "object",
            "required": [
                "branch_id",
                "products"
            ],
            "properties": {
                "branch_id": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models_v1.CreateIncomeProduct"
                    }
                }
            }
        },
        "models_v1.CreateIncomeProduct": {
            "type": "object",
            "required": [
                "product_id",
                "product_price",
                "quantity"
            ],
            "properties": {
                "product_id": {
                    "type": "string"
                },
                "product_price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "models_v1.CreateNewRole": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models_v1.CreateOrder": {
            "type": "object",
            "required": [
                "client_first_name",
                "client_last_name",
                "client_phone_number",
                "delivery_addr_lat",
                "delivery_addr_long",
                "delivery_type",
                "payment_type"
            ],
            "properties": {
                "client_comment": {
                    "type": "string"
                },
                "client_first_name": {
                    "type": "string"
                },
                "client_last_name": {
                    "type": "string"
                },
                "client_phone_number": {
                    "type": "string"
                },
                "delivery_addr_lat": {
                    "type": "number"
                },
                "delivery_addr_long": {
                    "type": "number"
                },
                "delivery_name": {
                    "type": "string"
                },
                "delivery_type": {
                    "type": "string"
                },
                "payment_type": {
                    "type": "string"
                }
            }
        },
        "models_v1.CreateStorage": {
            "type": "object",
            "properties": {
                "branch_id": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "models_v1.GetBasket": {
            "type": "object",
            "properties": {
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models_v1.GetBasketProduct"
                    }
                },
                "total_price": {
                    "type": "number"
                }
            }
        },
        "models_v1.GetBasketProduct": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "main_image": {
                    "type": "string"
                },
                "name_ru": {
                    "type": "string"
                },
                "name_uz": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "models_v1.Income": {
            "type": "object",
            "properties": {
                "branch_id": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models_v1.IncomeProduct"
                    }
                },
                "total_price": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models_v1.IncomeProduct": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "income_id": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "product_price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "total_price": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models_v1.IncomeResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "incomes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models_v1.Income"
                    }
                }
            }
        },
        "models_v1.LoginAdminRequest": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models_v1.LoginRequest": {
            "type": "object",
            "required": [
                "source",
                "type"
            ],
            "properties": {
                "source": {
                    "type": "string",
                    "example": "998912345678"
                },
                "type": {
                    "type": "string",
                    "example": "phone_number"
                }
            }
        },
        "models_v1.Product": {
            "type": "object",
            "properties": {
                "articul": {
                    "type": "string"
                },
                "brand_id": {
                    "type": "string"
                },
                "category": {
                    "$ref": "#/definitions/models.Category"
                },
                "category_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description_ru": {
                    "type": "string"
                },
                "description_uz": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models_v1.ProductMediaFiles"
                    }
                },
                "main_image": {
                    "type": "string"
                },
                "name_ru": {
                    "type": "string"
                },
                "name_uz": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "rating": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "video_files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models_v1.ProductMediaFiles"
                    }
                },
                "view_count": {
                    "type": "integer"
                }
            }
        },
        "models_v1.ProductMediaFiles": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "media_file": {
                    "type": "string"
                }
            }
        },
        "models_v1.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "phone_number"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "example@example.com"
                },
                "name": {
                    "type": "string",
                    "example": "Islombek"
                },
                "password": {
                    "type": "string",
                    "example": "password_1"
                },
                "phone_number": {
                    "type": "string",
                    "example": "998912345678"
                }
            }
        },
        "models_v1.RemoveFromBasket": {
            "type": "object",
            "required": [
                "product_id"
            ],
            "properties": {
                "product_id": {
                    "type": "string"
                }
            }
        },
        "models_v1.RequestCode": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "need_code": {
                    "type": "boolean"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "models_v1.RequestCodeRequest": {
            "type": "object",
            "required": [
                "source",
                "type"
            ],
            "properties": {
                "source": {
                    "type": "string",
                    "example": "example@example.com"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "email",
                        "phone_number"
                    ],
                    "example": "email"
                }
            }
        },
        "models_v1.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models_v1.ResponseID": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "models_v1.Storage": {
            "type": "object",
            "properties": {
                "branch_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models_v1.StorageResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "storage": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models_v1.Storage"
                    }
                }
            }
        },
        "models_v1.Token": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "models_v1.UUIDResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "438b3f0a-126b-4085-a8e9-525dfe0941e5"
                }
            }
        },
        "models_v1.UpdateStorage": {
            "type": "object",
            "properties": {
                "branch_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "models_v1.VerifyCodeRequest": {
            "type": "object",
            "required": [
                "code",
                "source",
                "type"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "111111"
                },
                "source": {
                    "type": "string",
                    "example": "example@example.com"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "email",
                        "phone_number"
                    ],
                    "example": "email"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
