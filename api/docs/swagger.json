{
    "swagger": "2.0",
    "info": {
        "title": "E-commerce project v2",
        "contact": {}
    },
    "host": "localhost:8123",
    "paths": {
        "/api/admin": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Change Admin, available for owners",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "change admin",
                "operationId": "changeAdmin",
                "parameters": [
                    {
                        "description": "Change info",
                        "name": "changeInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.ChangeAdminRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request/ invalid email/ invalid phone_number/ No update provided by user / invalid password",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "User/Role not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create admin.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Create admin",
                "operationId": "createAdmin",
                "parameters": [
                    {
                        "description": "Create admin body",
                        "name": "createAdmin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created",
                        "schema": {
                            "$ref": "#/definitions/models_v1.UUIDResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request/Invalid email/Invalid phone/Invalid password",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden. Current user has no enough permissions to create admin",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "409": {
                        "description": "Already exists",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/admin/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "delete admin",
                "operationId": "deleteAdmin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/auth/change_password": {
            "post": {
                "description": "Change password works only for clients.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "ChangePassword",
                "operationId": "changePassword",
                "parameters": [
                    {
                        "description": "Change password",
                        "name": "change_password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.ChangePassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully changed password",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request, invalid password",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "406": {
                        "description": "Invalid verification code",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "501": {
                        "description": "Not implemented\"s",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "operationId": "login",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success returning token",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Token"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "406": {
                        "description": "User not verified",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "417": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/auth/login_admin": {
            "post": {
                "description": "Login for admin. This is need to enter for admin panel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login for admin",
                "operationId": "loginadmin",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "login_admin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success returning token",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Token"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "406": {
                        "description": "User not verified",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "417": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "description": "Create Client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Create Client",
                "operationId": "register",
                "parameters": [
                    {
                        "description": "Register Request",
                        "name": "register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Request that needs verification",
                        "schema": {
                            "$ref": "#/definitions/models_v1.RequestCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request / Invalid email / Invalid phone / Invalid password",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/auth/request_code": {
            "post": {
                "description": "request code is needed when password is forgotten",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Request code",
                "operationId": "requestCode",
                "parameters": [
                    {
                        "description": "Request code request",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.RequestCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success returning token",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request / Invalid email / Invalid phone",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal / Failed to send code",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "501": {
                        "description": "Not implemented email/phone verification",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/auth/verify_code": {
            "post": {
                "description": "Verify client's email/phone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Verify client's email/phone",
                "operationId": "verifyCode",
                "parameters": [
                    {
                        "description": "Verify code Request",
                        "name": "verifyCode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.VerifyCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "406": {
                        "description": "Invalid verification code",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "501": {
                        "description": "Not implemented email/phone verification",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/brand": {
            "get": {
                "description": "get brand",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brand"
                ],
                "summary": "get brand all",
                "operationId": "getAllBrand",
                "responses": {
                    "200": {
                        "description": "brand returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Brand"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "change brand name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brand"
                ],
                "summary": "change brand",
                "operationId": "changeBrand",
                "parameters": [
                    {
                        "description": "change brand",
                        "name": "changeBrand",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.ChangeBrand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request / bad uuid / no update provided",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Brand not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create brand",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brand"
                ],
                "summary": "Create brand",
                "operationId": "createBrand",
                "parameters": [
                    {
                        "description": "Create brand request",
                        "name": "create_brand",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.CreateBrand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/models.Brand"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "409": {
                        "description": "Already exists",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/brand/{id}": {
            "get": {
                "description": "get brand by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brand"
                ],
                "summary": "get brand by id",
                "operationId": "getBrandById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "brand id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "brand returned",
                        "schema": {
                            "$ref": "#/definitions/models.Brand"
                        }
                    },
                    "400": {
                        "description": "Bad UUID",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Brand not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete brand",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brand"
                ],
                "summary": "delete brand",
                "operationId": "deleteBrand",
                "parameters": [
                    {
                        "type": "string",
                        "description": "brand id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "bad uuid",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "brand not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/category": {
            "get": {
                "description": "get category, returns translations, and subcategories for all category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "get category all",
                "operationId": "getAllCategory",
                "responses": {
                    "200": {
                        "description": "category returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CategorySwagger"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "change category name and parent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "change category",
                "operationId": "changeCategory",
                "parameters": [
                    {
                        "description": "change category",
                        "name": "changeCategory",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.ChangeCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request / bad uuid",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Category not found/ parent category not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "Create category",
                "operationId": "createCategory",
                "parameters": [
                    {
                        "description": "Create category request",
                        "name": "create_category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.CreateCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.ResponseID"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "409": {
                        "description": "Already exists",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/category/add_translation": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create category translation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "Create category translation",
                "operationId": "AddCategoryTranslation",
                "parameters": [
                    {
                        "description": "Create category translation request",
                        "name": "create_category_translation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.CategoryTranslation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request/ Bad id",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "409": {
                        "description": "Already exists",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/category/change_image": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "change category image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "change category image",
                "operationId": "ChangeCategoryImage",
                "parameters": [
                    {
                        "type": "string",
                        "name": "category_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "picture file",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request / bad uuid",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "413": {
                        "description": "Image size is big",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "415": {
                        "description": "Image type is not supported",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/category/{id}": {
            "get": {
                "description": "get category by id, returns translations, and subcategories for specified category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "get category by id",
                "operationId": "getCategoryById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "category returned",
                        "schema": {
                            "$ref": "#/definitions/models.CategorySwagger"
                        }
                    },
                    "400": {
                        "description": "Bad UUID",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete category \u0026 delete category translations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "delete category",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "bad uuid",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "category not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/owner": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Change owner, available for super",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "owner"
                ],
                "summary": "change owner",
                "operationId": "changeOwner",
                "parameters": [
                    {
                        "description": "Change info",
                        "name": "changeInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.ChangeAdminRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request/ invalid email/ invalid phone_number/ No update provided by user / invalid password",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "User/Role not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create owner. Will return error \"Already exists\" if the owner is already there.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "owner"
                ],
                "summary": "Create owner",
                "operationId": "createOwner",
                "parameters": [
                    {
                        "description": "Create owner body",
                        "name": "createowner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models_v1.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Token"
                        }
                    },
                    "400": {
                        "description": "Bad request/Invalid email/Invalid phone/Invalid password",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden. If currect user is not super, this endpoint will return forbidden(403)",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "409": {
                        "description": "Already exists",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/owner/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete owner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "owner"
                ],
                "summary": "delete owner",
                "operationId": "deleteOwner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/product": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create product",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "create product",
                "operationId": "createProduct",
                "parameters": [
                    {
                        "type": "string",
                        "name": "articul",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "brand_id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "category_id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "description_ru",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "description_uz",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "name": "income_price",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "name_ru",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "name_uz",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "name": "outcome_price",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "quantity",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "status",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Main image",
                        "name": "main_image",
                        "in": "formData"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "csv",
                        "description": "Image files (multiple)",
                        "name": "image_files",
                        "in": "formData"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "csv",
                        "description": "Video files (multiple)",
                        "name": "video_files",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models.Product"
                        }
                    },
                    "400": {
                        "description": "Bad request / bad uuid / status invalid",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Category not found / Brand not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "409": {
                        "description": "Articul already found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "413": {
                        "description": "Image size is big / Video size is big / Image count too many / Video count too many",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "415": {
                        "description": "Image type is not supported / Video type is not supported",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/roles/attach": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "attach permission to role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "attach permission to role",
                "operationId": "AttachPermissionToRole",
                "parameters": [
                    {
                        "description": "attach body",
                        "name": "attach_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AttachPermission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attach Permission To Role",
                        "schema": {
                            "$ref": "#/definitions/models.AttachPermission"
                        }
                    },
                    "400": {
                        "description": "Bad request / bad UUID",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "404": {
                        "description": "Role not found/ Permission not found",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "409": {
                        "description": "Already exists",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "DisAttach Permission To Role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "DisAttach Permission To Role",
                "operationId": "DisAttachPermissionToRole",
                "parameters": [
                    {
                        "description": "disattach body",
                        "name": "disattach_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AttachPermission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Disattach Permission To Role",
                        "schema": {
                            "$ref": "#/definitions/models.AttachPermission"
                        }
                    },
                    "400": {
                        "description": "Bad request / bad UUID",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/roles/permission": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get all permissions in db",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "get all permissions",
                "operationId": "getAllPermissions",
                "responses": {
                    "200": {
                        "description": "Permissions list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PermissionModel"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        },
        "/api/roles/role": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get all roles in db",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "get all roles",
                "operationId": "getAllRoles",
                "responses": {
                    "200": {
                        "description": "Roles list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.RoleModel"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal",
                        "schema": {
                            "$ref": "#/definitions/models_v1.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AttachPermission": {
            "type": "object",
            "required": [
                "permission_id",
                "role_id"
            ],
            "properties": {
                "permission_id": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "models.Brand": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.CategorySwagger": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "a2d70daf-b4ac-4198-a6a0-999447483c18"
                },
                "image": {
                    "type": "string",
                    "example": "https://firebasestorage.googleapis.com/v0/b/ulab-market.appspot.com/o/test%2Fcategory%2Fa2d70daf-b4ac-4198-a6a0-999447483c18?alt=media\u0026token=test%2Fcategory%2Fa2d70daf-b4ac-4198-a6a0-999447483c18"
                },
                "name": {
                    "type": "string",
                    "example": "electronic"
                },
                "parent_id": {
                    "type": "string",
                    "example": ""
                },
                "subcategories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SubCategorySwagger"
                    }
                },
                "translations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CategoryTranslation"
                    }
                }
            }
        },
        "models.CategoryTranslation": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "string"
                },
                "language_code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.PermissionModel": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Product": {
            "type": "object",
            "properties": {
                "articul": {
                    "type": "string"
                },
                "brand_id": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description_ru": {
                    "type": "string"
                },
                "description_uz": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductMediaFiles"
                    }
                },
                "income_price": {
                    "type": "number"
                },
                "main_image": {
                    "type": "string"
                },
                "name_ru": {
                    "type": "string"
                },
                "name_uz": {
                    "type": "string"
                },
                "outcome_price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "rating": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "video_files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductMediaFiles"
                    }
                }
            }
        },
        "models.ProductMediaFiles": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "media_file": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                }
            }
        },
        "models.RoleModel": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PermissionModel"
                    }
                }
            }
        },
        "models.SubCategorySwagger": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "translations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CategoryTranslation"
                    }
                }
            }
        },
        "models_v1.CategoryTranslation": {
            "type": "object",
            "required": [
                "category_id",
                "language_code",
                "name"
            ],
            "properties": {
                "category_id": {
                    "type": "string"
                },
                "language_code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models_v1.ChangeAdminRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "models_v1.ChangeBrand": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models_v1.ChangeCategory": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                }
            }
        },
        "models_v1.ChangePassword": {
            "type": "object",
            "required": [
                "code",
                "password",
                "source",
                "type"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "111111"
                },
                "password": {
                    "type": "string",
                    "example": "password_1"
                },
                "source": {
                    "type": "string",
                    "example": "example@example.com"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "email",
                        "phone_number"
                    ],
                    "example": "email"
                }
            }
        },
        "models_v1.CreateBrand": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "models_v1.CreateCategory": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                }
            }
        },
        "models_v1.LoginRequest": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string",
                    "example": "example@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "password_1"
                }
            }
        },
        "models_v1.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "phone_number"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "example@example.com"
                },
                "name": {
                    "type": "string",
                    "example": "Islombek"
                },
                "password": {
                    "type": "string",
                    "example": "password_1"
                },
                "phone_number": {
                    "type": "string",
                    "example": "998912345678"
                }
            }
        },
        "models_v1.RequestCode": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "need_code": {
                    "type": "boolean"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "models_v1.RequestCodeRequest": {
            "type": "object",
            "required": [
                "source",
                "type"
            ],
            "properties": {
                "source": {
                    "type": "string",
                    "example": "example@example.com"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "email",
                        "phone_number"
                    ],
                    "example": "email"
                }
            }
        },
        "models_v1.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models_v1.ResponseID": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "models_v1.Token": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "models_v1.UUIDResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "438b3f0a-126b-4085-a8e9-525dfe0941e5"
                }
            }
        },
        "models_v1.VerifyCodeRequest": {
            "type": "object",
            "required": [
                "code",
                "source",
                "type"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "111111"
                },
                "source": {
                    "type": "string",
                    "example": "example@example.com"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "email",
                        "phone_number"
                    ],
                    "example": "email"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}