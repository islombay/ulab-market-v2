version: '3.8'

services:
  app:
    image: "${DOCKER_USERNAME}/${DOCKER_PROJECTNAME}:${DOCKER_TAG}"
    ports:
      - "127.0.0.1:8123:8123"
    restart: always
    logging:
      driver: "json-file"
    dns:
      - 8.8.8.8
    networks:
      default:
        nameservers:
          - 8.8.8.8
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
    volumes:
      - ./config/docker.yml:/app/config/docker.yml
      - ./api/docs/docs.go:/app/api/docs/docs.go
    environment:
      - DB_USER=${DB_USER}
      - DB_PWD=${DB_PWD}
      - SECRET=${SECRET}
      - ENV=docker

      - SMTP_EMAIL_PWD= ${SMTP_EMAIL_PWD}

      - FIREBASE_TYPE=${FIREBASE_TYPE}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_PRIVATE_KEY_ID=${FIREBASE_PRIVATE_KEY_ID}
      - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}
      - FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}
      - FIREBASE_CLIENT_ID=${FIREBASE_CLIENT_ID}
      - FIREBASE_AUTH_URI=${FIREBASE_AUTH_URI}
      - FIREBASE_TOKEN_URI=${FIREBASE_TOKEN_URI}
      - FIREBASE_AUTH_PROVIDER_X509_CERT_URL=${FIREBASE_AUTH_PROVIDER_X509_CERT_URL}
      - FIREBASE_CLIENT_X509_CERT_URL=${FIREBASE_CLIENT_X509_CERT_URL}
      - FIREBASE_UNIVERSE_DOMAIN=${FIREBASE_UNIVERSE_DOMAIN}

      - auth_tg_bot=${auth_tg_bot}
      - otp_id=${otp_id}

      - ROOT_EMAIL=${ROOT_EMAIL}
      - ROOT_PWD=${ROOT_PWD}
    labels:
      - "app=ulab-market"
      - "service=ulab-market-server"
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://localhost:8123/health || exit 1"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 3

  redis:
    restart: always
    image: "redis:alpine"
    ports:
      - "127.0.0.1:6378:6379"

  postgres:
    restart: always
    image: "postgres:alpine"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PWD}
      POSTGRES_DB: ulab-market-v2
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: